import springfox.gradlebuild.plugins.MultiProjectReleasePlugin

import java.text.SimpleDateFormat

Date buildTimeAndDate = new Date()

ext {
  buildDate = new SimpleDateFormat('yyyy-MM-dd').format(buildTimeAndDate)
  buildTime = new SimpleDateFormat('HH:mm:ss.SSSZ').format(buildTimeAndDate)
  projectUrl = "https://github.com/XSComSoft/springfox-springboot3"
  publishUrl = project.hasProperty('publishUrl') ?
        project.property('publishUrl') :
        System.getenv('PUBLISH_URL')
  passphrase = project.hasProperty('gpgPassphrase') ?
      project.property('gpgPassphrase') :
      System.getenv('GPG_PASSPHRASE')
  sonatypeUser = project.hasProperty('ossUser') ?
      project.property('ossUser') :
      System.getenv('SONATYPE_USER_NAME')
  sonatypePassword = project.hasProperty('ossPassword') ?
      project.property('ossPassword') :
      System.getenv('SONATYPE_PASSWORD')
  shouldSyncWithMavenCentral = project.hasProperty('ossSync') ?
      project.property('ossSync') :
      System.getenv('SONATYPE_SYNC')
}

apply plugin: 'maven-publish'

jar {
  manifest {
    attributes(
        'Implementation-Title': project.name,
        'Implementation-Version': new Object() {
          String toString() { project.version }
        },
        'Created-By': System.getProperty('java.version') + ' (' + System.getProperty('java.vendor') + ')',
        'Built-With': "gradle-${project.getGradle().getGradleVersion()}, groovy-${GroovySystem.getVersion()}",
        'Build-Time': "${new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")}",
        'Built-By': System.getProperty('user.name'),
        'Built-On': "${InetAddress.localHost.hostName}/${InetAddress.localHost.hostAddress}"
    )
  }
}

def generatedSources = "$buildDir/generated/source/apt/main"

task packageSources(type: Jar) {
  archiveClassifier.set("sources")
  from sourceSets.main.allSource
  from generatedSources
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  archiveClassifier.set("javadoc")
  from javadoc.destinationDir
}

artifacts {
  archives packageSources
  archives javadocJar
}

javadoc {
  if (JavaVersion.current().isJava9Compatible()) {
    options.addBooleanOption('html5', true)
  }
  if (JavaVersion.current().isJava8Compatible()) {
    options.addStringOption('Xdoclint:none', '-quiet')
  }
}

publishing {
  repositories  {
    maven {
      name 'nexus'
      url = project.publishUrl
      credentials{
        username = project.ossUser
        password = project.ossPassword
      }
    }
  }
  publications {
    mavenJava(MavenPublication) {
      from components.java
      versionMapping {
        usage('java-api') {
          fromResolutionOf('runtimeClasspath')
        }
        usage('java-runtime') {
          fromResolutionResult()
        }
      }
      pom {
        name = "${project.name}"
        url = "https://github.com/XSComSoft/springfox-springboot3"
        description = "JSON API documentation for spring based applications"

        scm {
          url = "scm:git:git@github.com:springfox/springfox.git"
          connection = 'scm:git:git@github.com:springfox/springfox.git'
          developerConnection = 'scm:git:git@github.com:springfox/springfox.git'
        }

        licenses {
          license {
            name = "The Apache Software License, Version 2.0"
            url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
            distribution = "repo"
          }
        }
        developers {
          developer {
            id = "martypitt@me.com"
            name = "Marty Pitt"
            organization = "The Mango Factory"
            email = "martypitt@me.com"
          }
          developer {
            id = "dilipkrish"
            name = "Dilip Krishnan"
            email = "dilipkrish_subscriptions@yahoo.com"
          }
          developer {
            id = "adrianbk"
            name = "Adrian Kelly"
            email = "adrianbkelly+swagger@gmail.com"
          }
        }
      }
      artifact packageSources
      artifact javadocJar
    }
  }
}



